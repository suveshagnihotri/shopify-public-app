# HTTP server block - Redirects to HTTPS and handles ACME challenges
server {
    listen 80;
    server_name peeq.co.in www.peeq.co.in;

    # ACME challenge (Certbot) - Must be before other location blocks
    # Certbot writes challenge files to /var/www/certbot/.well-known/acme-challenge/
    location /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
        default_type text/plain;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server block - Main application
server {
    listen 443 ssl http2;
    server_name peeq.co.in www.peeq.co.in;

    # SSL Certificate paths (installed by certbot)
    ssl_certificate /etc/letsencrypt/live/peeq.co.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/peeq.co.in/privkey.pem;

    # SSL Configuration (Best practices)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Redirect www to apex (optional - uncomment if you want apex only)
    # if ($host = www.peeq.co.in) {
    #     return 301 https://peeq.co.in$request_uri;
    # }

    # Proxy to Flask app
    location / {
        # In docker-compose.prod.yml, the service name is 'app'
        proxy_pass http://app:8000; # container name:port
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Preserve cookies for session management (important for OAuth)
        proxy_cookie_path / /;

        # Longer timeouts for webhook/long requests
        proxy_read_timeout 300s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
    }
}

