services:
  app:
    build: .
    image: shopify_public_app:latest
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SHOPIFY_API_KEY=${SHOPIFY_API_KEY}
      - SHOPIFY_API_SECRET=${SHOPIFY_API_SECRET}
      - SHOPIFY_SCOPES=${SHOPIFY_SCOPES}
      - SHOPIFY_REDIRECT_URI=${SHOPIFY_REDIRECT_URI}
      - SECRET_KEY=${SECRET_KEY}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    command: gunicorn -w 3 -k sync -b 0.0.0.0:5000 app:app

  worker:
    build: .
    image: shopify_public_app:latest
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - app
      - db
      - redis
    volumes:
      - .:/app
    command: celery -A celery_app worker --loglevel=info

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=shopify_app_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine

  nginx:
    image: nginx:stable-alpine
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/peeq.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot_www:/var/www/certbot
      - certbot_certs:/etc/letsencrypt

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_certs:/etc/letsencrypt

volumes:
  postgres_data:
  certbot_www:
  certbot_certs:


